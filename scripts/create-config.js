// scripts/create-config.js
/**
 * This script creates a default atomic-docs.config.js file in the root of the consuming app
 * if it doesn't already exist. It also adds the generate-docs-manifest script to the consuming
 * app's package.json if it doesn't already exist.
 */
const fs = require('fs');
const path = require('path');

// Get the root directory of the consuming app
// INIT_CWD is set by npm and points to the directory where npm was invoked
// Fallback to process.cwd() if INIT_CWD is not available
const appRoot = process.env.INIT_CWD || process.cwd();

console.log(`Creating config file in app root: ${appRoot}`);

// Path to the config file
const configPath = path.join(appRoot, 'atomic-docs.config.js');

// Default config content
const defaultConfigContent = `// atomic-docs.config.js
// This file was automatically generated by vue-atomic-docs
// You can modify this file to customize your documentation setup

module.exports = {
  // Path to output the atomic-docs-manifest.ts file
  output: 'src/atomic-docs-manifest.ts',

  // Path to the components directory
  componentsDir: 'src/components',

  // Path to the examples directory
  examplesDir: 'src/component-examples',

  // Base name for components in the plugin
  pluginComponentsBaseName: 'components',

  // Base name for examples in the plugin
  pluginExamplesBaseName: 'component-examples'
};
`;

// Check if the config file already exists
if (fs.existsSync(configPath)) {
  console.log(`Config file already exists at ${configPath}`);
} else {
  try {
    // Create the config file
    fs.writeFileSync(configPath, defaultConfigContent);
    console.log(`✅ Created default config file at ${configPath}`);
  } catch (error) {
    console.error(`❌ Error creating config file: ${error.message}`);
  }
}

// Add the generate-docs-manifest script to the consuming app's package.json
const packageJsonPath = path.join(appRoot, 'package.json');

if (fs.existsSync(packageJsonPath)) {
  try {
    // Read the package.json file
    const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));

    // Check if the scripts section exists
    if (!packageJson.scripts) {
      packageJson.scripts = {};
    }

    // Check if the generate-docs-manifest script already exists
    if (!packageJson.scripts['generate-docs-manifest']) {
      // Add the script
      packageJson.scripts['generate-docs-manifest'] = 'node ./node_modules/vue-atomic-docs/src/scripts/generate-docs-manifest.js';

      // Write the updated package.json back to disk
      fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2));
      console.log(`✅ Added generate-docs-manifest script to package.json`);
    } else {
      console.log(`generate-docs-manifest script already exists in package.json`);
    }
  } catch (error) {
    console.error(`❌ Error updating package.json: ${error.message}`);
  }
} else {
  console.error(`❌ package.json not found at ${packageJsonPath}`);
}
